plugins {
  id "com.github.node-gradle.node" version "3.1.1"
}

node {
  download = true
  // node 16 comes with npm v7
  version = "16.1.0"
  npmInstallCommand = "ci"
}

task generate(type: NpmTask) {
  args = ['run', 'generate']
  dependsOn rootProject.generateGraphqlSchema
  dependsOn npmInstall
}

task start(type: NpmTask) {
  args = ['start']
  dependsOn generate
}

task test(type: NpmTask) {
  args = ['run', 'test']
  dependsOn npmInstall
}

task lint(type: NpmTask) {
  args = ['run', 'lint']
  dependsOn npmInstall
  dependsOn generate
}

task check {
  dependsOn lint
  // Don't run tests for now because they are not configured correctly
  // dependsOn test
}

task assemble(type: NpmTask) {
  args = ['run', 'assemble']
  dependsOn generate
}

task bundle(type: NpmTask) {
  args = ['run', 'build']
  dependsOn generate
}

// set the version in package.json to the same version as the gradle.properties
// do not use [rootProject|project].version as it might be outdated while releasing a new version
task updateVersionFromGradle(type: NpmTask) {
  def gradleProperties = new Properties()
  file("../$GRADLE_PROPERTIES").withInputStream { gradleProperties.load(it) }

  args = ['version', '--no-git-tag-version', gradleProperties.version.toString()]
}
